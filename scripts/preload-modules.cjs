/**
 * This script preloads CommonJS versions of certain modules
 * to fix ESM compatibility issues, especially on Windows.
 *
 * Run with: node scripts/preload-modules.cjs
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// Directory where CommonJS versions of modules will be stored
const cjsDir = path.join(__dirname, '..', 'node_modules', '.cjs-modules');

// Ensure the directory exists
if (!fs.existsSync(cjsDir)) {
    fs.mkdirSync(cjsDir, { recursive: true });
}

// List of modules that need CommonJS versions
const modules = [
    'xlsx',
    'papaparse'
];

console.log('Preloading modules for ESM compatibility...');

modules.forEach(moduleName => {
    try {
        // Path for the CommonJS wrapper
        const wrapperPath = path.join(cjsDir, `${moduleName}.cjs`);

        // Generate a simple wrapper that loads the module as CommonJS
        const content = `
      const ${moduleName} = require('${moduleName}');
      module.exports = ${moduleName};
    `;

        // Write the wrapper file
        fs.writeFileSync(wrapperPath, content.trim(), 'utf8');

        console.log(`✓ Created CJS wrapper for ${moduleName}`);
    } catch (error) {
        console.error(`✗ Failed to create CJS wrapper for ${moduleName}:`, error);
    }
});

// Create a README explaining the purpose of these files
const readmePath = path.join(cjsDir, 'README.md');
const readmeContent = `
# CommonJS Module Wrappers

This directory contains CommonJS wrapper modules for packages that have ESM compatibility issues,
especially when using absolute file paths on Windows systems.

These wrappers are automatically generated by the \`scripts/preload-modules.cjs\` script
and are used by the application to avoid ESM path resolution issues.

**Do not delete these files unless you know what you're doing!**
`.trim();

fs.writeFileSync(readmePath, readmeContent, 'utf8');

console.log('\nModule preloading complete! Added CommonJS wrappers for ESM compatibility.');
console.log('You can now use these modules in ESM code without path resolution issues.');